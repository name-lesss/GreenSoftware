This file shows how the different files and programming languages were compiled and runned for the revcomp problem.

Java:
    -mv revcomp.java-2.java revcomp.java (because of class name)
    -javac -d . revcomp.java
    -java revcomp 0 < input.txt (> result.txt)

JavaScript:
    -cp -L revcomp.node.node revcomp.js
    -node revcomp.js 0 < input.txt (> result.txt)

Python3:
    -python3 revcomp.python3.py 0 < input.txt (> result.txt)

PHP:
    -php -n revcomp.php 0 < input.txt (> result.txt)

C#:
    -mcs revcomp.csharp.cs
    -mono revcomp.csharp.exe 0 < input.txt (> result.txt)

C:
  Compile:
    -(for 1,2,3)gcc -pipe -Wall -O3 -fomit-frame-pointer -march=native -pthread revcomp.gcc.c -o revcomp.gcc_run
    -(for 4,5)gcc -pipe -Wall -O3 -fomit-frame-pointer -march=native revcomp.gcc-4.c -o revcomp.gcc_run
    -(for 6)gcc -pipe -Wall -O3 -fomit-frame-pointer -march=native -fopenmp revcomp.gcc-6.c -o revcomp.gcc_run
  Compile no optimization:
    -(for 1,2,3)gcc -pthread revcomp.gcc.c -o revcomp.gcc_run
    -(for 4,5,6)gcc revcomp.gcc-4.c -o revcomp.gcc_run
  Run:
    -./revcomp.gcc_run 0 < input.txt (> result.txt)

C++:
  Compile:
    -(for 1,3,5)g++ -c -pipe -O3 -fomit-frame-pointer -march=native revcomp.gpp.c++ -o revcomp.c++.o && g++ revcomp.c++.o -o revcomp.gpp_run
    -(for 2)g++ -c -pipe -O3 -fomit-frame-pointer -march=native -fopenmp revcomp.gpp-2.c++ -o revcomp.c++.o && g++ revcomp.c++.o -o revcomp.gpp_run -fopenmp
    -(for 4)g++ -c -pipe -O3 -fomit-frame-pointer -march=native -std=c++11 -mtune=native -mfpmath=sse -msse2 revcomp.gpp-4.c++ -o revcomp.c++.o && g++ revcomp.c++.o -o revcomp.gpp_run -pthread
  Compile no optimizations:
    -(for 1,2,3,5)g++ -c revcomp.gpp.c++ -o revcomp.c++.o && g++ revcomp.c++.o -o revcomp.gpp_run
    -(for 4)g++ -c revcomp.gpp-4.c++ -o revcomp.c++.o && g++ revcomp.c++.o -o revcomp.gpp_run -pthread
  Run:
    -./revcomp.gpp_run 0 < input.txt (> result.txt)

Ruby:
    -ruby -W0 revcomp.yarv-2.yarv 0 < input.txt (> result.txt)
